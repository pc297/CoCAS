package TestWizard;

import java.awt.CardLayout;

/*
 * MainFrame.java
 *
 * Created on 10 juin 2008, 17:19
 */
import java.awt.Cursor;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.UIManager;


/**
 *
 * @author  jeanniard
 */
public class MainFrame extends javax.swing.JFrame {
    CardLayout cardLayout;
    /** Creates new form MainFrame */
    public MainFrame() {
        try{UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());}
        catch(Exception e){}
        
        initComponents();
        cardLayout = (CardLayout)wizardInnerPanel.getLayout();
        directoryChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    
    
//        wizardInnerPanel.setLayout(cardLayout);
//        wizardInnerPanel.add(namesPanel, "nameAndDirectoryPanel");
//        wizardInnerPanel.add(normalisationPanel, "normalisationPanel");
//        wizardInnerPanel.add(peakPanel, "peakPanel");
//        wizardInnerPanel.add(outputPanel, "outputPanel");
//        wizardInnerPanel.add(summaryPanel, "summaryPanel");
        
        
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        wizardFrame = new javax.swing.JDialog();
        wizardMainPanel = new javax.swing.JPanel();
        wizard_cancelButton = new javax.swing.JButton();
        wizard_nextButton = new javax.swing.JButton();
        wizard_backButton = new javax.swing.JButton();
        wizardMain_separator = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        wizardInnerPanel = new javax.swing.JPanel();
        namesPanel = new javax.swing.JPanel();
        names_TitleLabel = new javax.swing.JLabel();
        names_analysisNameLabel = new javax.swing.JLabel();
        names_numberOfSlidesLabel = new javax.swing.JLabel();
        names_analysisNameTextField = new javax.swing.JTextField();
        names_numberOfSlidesSpinner = new javax.swing.JSpinner();
        normalisationPanel = new javax.swing.JPanel();
        normalisation_titleLabel = new javax.swing.JLabel();
        normalisation_medianRadioButton = new javax.swing.JRadioButton();
        normalisation_lowessRadioButton = new javax.swing.JRadioButton();
        normalisation_vsnRadioButton = new javax.swing.JRadioButton();
        normalisation_pengRadioButton = new javax.swing.JRadioButton();
        normalisation_separator = new javax.swing.JSeparator();
        normalisation_explainScrollPane = new javax.swing.JScrollPane();
        normalisation_explainTextArea = new javax.swing.JTextArea();
        peakPanel = new javax.swing.JPanel();
        peak_titleLabel = new javax.swing.JLabel();
        peak_distanceLabel = new javax.swing.JLabel();
        peak_bindingPeakLabel = new javax.swing.JLabel();
        peak_bindingPeakMeanLabel = new javax.swing.JLabel();
        peak_bindingPeakStddevLabel = new javax.swing.JLabel();
        peak_bindingExtendLabel = new javax.swing.JLabel();
        peak_bindingExtendMeanLabel = new javax.swing.JLabel();
        peak_bindingExtendStddevLabel = new javax.swing.JLabel();
        peak_pValuePeakLabel = new javax.swing.JLabel();
        peak_pValueExtendLabel = new javax.swing.JLabel();
        peak_distanceTextField = new javax.swing.JTextField();
        peak_pValueExtendTextField = new javax.swing.JTextField();
        peak_pValuePeakTextField = new javax.swing.JTextField();
        peak_bindingExtendMeanTextField = new javax.swing.JTextField();
        peak_bindingPeakMeanTextField = new javax.swing.JTextField();
        peak_bindingPeakStddevTextField = new javax.swing.JTextField();
        peak_bindingExtendStddevTextField = new javax.swing.JTextField();
        peak_bindingCheckBox = new javax.swing.JCheckBox();
        peak_pValueCheckBox = new javax.swing.JCheckBox();
        outputPanel = new javax.swing.JPanel();
        output_titleLabel = new javax.swing.JLabel();
        output_formatLabel = new javax.swing.JLabel();
        output_gffCheckBox = new javax.swing.JCheckBox();
        output_sgrCheckBox = new javax.swing.JCheckBox();
        output_bedCheckBox = new javax.swing.JCheckBox();
        output_outputDirectoryLabel = new javax.swing.JLabel();
        output_outputDirectoryTextField = new javax.swing.JTextField();
        output_browseButton = new javax.swing.JButton();
        summaryPanel = new javax.swing.JPanel();
        summary_title = new javax.swing.JLabel();
        summary_experimentNameLabel = new javax.swing.JLabel();
        summary_outputDirectoryLabel = new javax.swing.JLabel();
        summary_numberOfSlidesLabel = new javax.swing.JLabel();
        summary_experimentTextField = new javax.swing.JTextField();
        summary_outputDirectoryTextField = new javax.swing.JTextField();
        summary_numberOfSlidesTextField = new javax.swing.JTextField();
        slideCreationDialog = new javax.swing.JDialog();
        slideCreationPanel = new javax.swing.JPanel();
        slideCreation_progressBar = new javax.swing.JProgressBar();
        normalisation_buttonGroup = new javax.swing.ButtonGroup();
        directoryChooser = new javax.swing.JFileChooser();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        wizardFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        wizardFrame.setTitle("Pipeline Wizard");
        wizardFrame.setBounds(new java.awt.Rectangle(100, 100, 500, 440));
        wizardFrame.setName("wizardFrame"); // NOI18N
        wizardFrame.setResizable(false);

        wizard_cancelButton.setText("Cancel");
        wizard_cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                wizard_cancelButtonMouseReleased(evt);
            }
        });

        wizard_nextButton.setText("Next");
        wizard_nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                wizard_nextButtonMouseReleased(evt);
            }
        });

        wizard_backButton.setText("Back");
        wizard_backButton.setEnabled(false);
        wizard_backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                wizard_backButtonMouseReleased(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("jLabel6");
        jLabel6.setMaximumSize(new java.awt.Dimension(100, 350));
        jLabel6.setMinimumSize(new java.awt.Dimension(100, 350));
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 350));

        wizardInnerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        wizardInnerPanel.setMaximumSize(new java.awt.Dimension(350, 350));
        wizardInnerPanel.setMinimumSize(new java.awt.Dimension(350, 350));
        wizardInnerPanel.setLayout(new java.awt.CardLayout());

        namesPanel.setName("namesPanel"); // NOI18N

        names_TitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        names_TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        names_TitleLabel.setText("New COCAS pipeline analysis");

        names_analysisNameLabel.setText("Analysis name");
        names_analysisNameLabel.setToolTipText("The way you want to name the analysis of your experiment.");

        names_numberOfSlidesLabel.setText("Number of experiments");
        names_numberOfSlidesLabel.setToolTipText("An experiment is considered to be a slide plus his potential replicates");

        names_analysisNameTextField.setToolTipText("The way you want to name the analysis of your experiment.");

        names_numberOfSlidesSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        names_numberOfSlidesSpinner.setToolTipText("An experiment is considered to be a slide plus his potential replicates");

        org.jdesktop.layout.GroupLayout namesPanelLayout = new org.jdesktop.layout.GroupLayout(namesPanel);
        namesPanel.setLayout(namesPanelLayout);
        namesPanelLayout.setHorizontalGroup(
            namesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(namesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(namesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, names_TitleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .add(namesPanelLayout.createSequentialGroup()
                        .add(namesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(names_analysisNameLabel)
                            .add(names_numberOfSlidesLabel))
                        .add(18, 18, 18)
                        .add(namesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(names_analysisNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(names_numberOfSlidesSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        namesPanelLayout.setVerticalGroup(
            namesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(namesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(names_TitleLabel)
                .add(30, 30, 30)
                .add(namesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(names_analysisNameLabel)
                    .add(names_analysisNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(namesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(names_numberOfSlidesLabel)
                    .add(names_numberOfSlidesSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(225, Short.MAX_VALUE))
        );

        wizardInnerPanel.add(namesPanel, "card6");

        normalisation_titleLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        normalisation_titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        normalisation_titleLabel.setText("Normalisation");

        normalisation_buttonGroup.add(normalisation_medianRadioButton);
        normalisation_medianRadioButton.setText("Median");
        normalisation_medianRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                normalisation_medianRadioButtonMouseReleased(evt);
            }
        });

        normalisation_buttonGroup.add(normalisation_lowessRadioButton);
        normalisation_lowessRadioButton.setText("Lowess");
        normalisation_lowessRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                normalisation_lowessRadioButtonMouseReleased(evt);
            }
        });

        normalisation_buttonGroup.add(normalisation_vsnRadioButton);
        normalisation_vsnRadioButton.setText("Variance Stabilisation (VSN)");
        normalisation_vsnRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                normalisation_vsnRadioButtonMouseReleased(evt);
            }
        });

        normalisation_buttonGroup.add(normalisation_pengRadioButton);
        normalisation_pengRadioButton.setText("Peng");
        normalisation_pengRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                normalisation_pengRadioButtonMouseReleased(evt);
            }
        });

        normalisation_explainScrollPane.setBorder(null);
        normalisation_explainScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        normalisation_explainScrollPane.setHorizontalScrollBar(null);

        normalisation_explainTextArea.setBackground(new java.awt.Color(240, 240, 240));
        normalisation_explainTextArea.setColumns(20);
        normalisation_explainTextArea.setEditable(false);
        normalisation_explainTextArea.setLineWrap(true);
        normalisation_explainTextArea.setRows(5);
        normalisation_explainTextArea.setWrapStyleWord(true);
        normalisation_explainTextArea.setBorder(null);
        normalisation_explainScrollPane.setViewportView(normalisation_explainTextArea);

        org.jdesktop.layout.GroupLayout normalisationPanelLayout = new org.jdesktop.layout.GroupLayout(normalisationPanel);
        normalisationPanel.setLayout(normalisationPanelLayout);
        normalisationPanelLayout.setHorizontalGroup(
            normalisationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(normalisationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(normalisationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(normalisationPanelLayout.createSequentialGroup()
                        .add(normalisation_lowessRadioButton)
                        .addContainerGap(281, Short.MAX_VALUE))
                    .add(normalisationPanelLayout.createSequentialGroup()
                        .add(normalisation_medianRadioButton)
                        .addContainerGap(283, Short.MAX_VALUE))
                    .add(normalisationPanelLayout.createSequentialGroup()
                        .add(normalisation_vsnRadioButton)
                        .addContainerGap(185, Short.MAX_VALUE))
                    .add(normalisationPanelLayout.createSequentialGroup()
                        .add(normalisation_pengRadioButton)
                        .addContainerGap(293, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, normalisationPanelLayout.createSequentialGroup()
                        .add(normalisationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, normalisation_explainScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                            .add(normalisation_separator, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, normalisationPanelLayout.createSequentialGroup()
                        .add(normalisation_titleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        normalisationPanelLayout.setVerticalGroup(
            normalisationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(normalisationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(normalisation_titleLabel)
                .add(18, 18, 18)
                .add(normalisation_medianRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(normalisation_lowessRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(normalisation_vsnRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(normalisation_pengRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(normalisation_separator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(normalisation_explainScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );

        wizardInnerPanel.add(normalisationPanel, "card5");

        peakPanel.setName("peakPanel"); // NOI18N

        peak_titleLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        peak_titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        peak_titleLabel.setText("Peak detection");

        peak_distanceLabel.setText("Distance threshold");
        peak_distanceLabel.setToolTipText("The distance beyond which two probes are not considered as neighbours.");

        peak_bindingPeakLabel.setText("Peak threshold");
        peak_bindingPeakLabel.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a peak probe.");

        peak_bindingPeakMeanLabel.setText("x Mean +");
        peak_bindingPeakMeanLabel.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a peak probe.");

        peak_bindingPeakStddevLabel.setText("x Std deviation");
        peak_bindingPeakStddevLabel.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a peak probe.");

        peak_bindingExtendLabel.setText("Extend threshold");
        peak_bindingExtendLabel.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a valid neighbour of a peak probe.");

        peak_bindingExtendMeanLabel.setText("x Mean +");
        peak_bindingExtendMeanLabel.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a valid neighbour of a peak probe.");

        peak_bindingExtendStddevLabel.setText("x Std deviation");
        peak_bindingExtendStddevLabel.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a valid neighbour of a peak probe.");

        peak_pValuePeakLabel.setText("Peak threshold");
        peak_pValuePeakLabel.setToolTipText("The threshold of p-value beyond which a probe will be considered as a peak probe.");
        peak_pValuePeakLabel.setEnabled(false);

        peak_pValueExtendLabel.setText("Extend threshold");
        peak_pValueExtendLabel.setToolTipText("The threshold of p-value beyond which a probe will be considered as a valid neighbour of a peak probe.");
        peak_pValueExtendLabel.setEnabled(false);

        peak_distanceTextField.setText("650");
        peak_distanceTextField.setToolTipText("The distance beyond which two probes are not considered as neighbours.");

        peak_pValueExtendTextField.setToolTipText("The threshold of p-value beyond which a probe will be considered as a valid neighbour of a peak probe.");
        peak_pValueExtendTextField.setEnabled(false);

        peak_pValuePeakTextField.setToolTipText("The threshold of p-value beyond which a probe will be considered as a peak probe.");
        peak_pValuePeakTextField.setEnabled(false);

        peak_bindingExtendMeanTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        peak_bindingExtendMeanTextField.setText("1");
        peak_bindingExtendMeanTextField.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a valid neighbour of a peak probe.");

        peak_bindingPeakMeanTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        peak_bindingPeakMeanTextField.setText("1");
        peak_bindingPeakMeanTextField.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a peak probe.");

        peak_bindingPeakStddevTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        peak_bindingPeakStddevTextField.setText("2");
        peak_bindingPeakStddevTextField.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a peak probe.");

        peak_bindingExtendStddevTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        peak_bindingExtendStddevTextField.setText("1");
        peak_bindingExtendStddevTextField.setToolTipText("The threshold of binding ratio beyond which a probe will be considered as a valid neighbour of a peak probe.");

        peak_bindingCheckBox.setSelected(true);
        peak_bindingCheckBox.setText("Binding ratio threshold");
        peak_bindingCheckBox.setToolTipText("Activate the binding ratio thresholds for the peak detection.");
        peak_bindingCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peak_bindingCheckBoxMouseReleased(evt);
            }
        });

        peak_pValueCheckBox.setText("p-Value threshold");
        peak_pValueCheckBox.setToolTipText("Activate the p-value thresholds for the peak detection.");
        peak_pValueCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                peak_pValueCheckBoxMouseReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout peakPanelLayout = new org.jdesktop.layout.GroupLayout(peakPanel);
        peakPanel.setLayout(peakPanelLayout);
        peakPanelLayout.setHorizontalGroup(
            peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(peakPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(peakPanelLayout.createSequentialGroup()
                        .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(peak_distanceLabel)
                            .add(peakPanelLayout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(peak_pValueExtendLabel)
                                    .add(peak_pValuePeakLabel)))
                            .add(peakPanelLayout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(peak_bindingExtendLabel)
                                    .add(peak_bindingPeakLabel))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 26, Short.MAX_VALUE)
                        .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(peak_pValueExtendTextField)
                            .add(peak_pValuePeakTextField)
                            .add(peak_distanceTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .add(peakPanelLayout.createSequentialGroup()
                                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, peak_bindingExtendMeanTextField)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, peak_bindingPeakMeanTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(peak_bindingExtendMeanLabel)
                                    .add(peak_bindingPeakMeanLabel))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(peak_bindingExtendStddevTextField)
                            .add(peak_bindingPeakStddevTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(peak_bindingPeakStddevLabel)
                            .add(peak_bindingExtendStddevLabel))
                        .add(27, 27, 27))
                    .add(peakPanelLayout.createSequentialGroup()
                        .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(peak_bindingCheckBox)
                            .add(peak_pValueCheckBox))
                        .addContainerGap(209, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, peakPanelLayout.createSequentialGroup()
                        .add(peak_titleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        peakPanelLayout.setVerticalGroup(
            peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(peakPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(peak_titleLabel)
                .add(18, 18, 18)
                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(peak_distanceLabel)
                    .add(peak_distanceTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(peak_bindingCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(peak_bindingPeakLabel)
                    .add(peak_bindingPeakMeanTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(peak_bindingPeakMeanLabel)
                    .add(peak_bindingPeakStddevTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(peak_bindingPeakStddevLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(peak_bindingExtendLabel)
                    .add(peak_bindingExtendMeanTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(peak_bindingExtendMeanLabel)
                    .add(peak_bindingExtendStddevTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(peak_bindingExtendStddevLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(peak_pValueCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(peak_pValuePeakLabel)
                    .add(peak_pValuePeakTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(peakPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(peak_pValueExtendLabel)
                    .add(peak_pValueExtendTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        wizardInnerPanel.add(peakPanel, "card4");

        output_titleLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        output_titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        output_titleLabel.setText("Output");

        output_formatLabel.setText("Output files format");

        output_gffCheckBox.setSelected(true);
        output_gffCheckBox.setText("GFF");
        output_gffCheckBox.setToolTipText("Format used :\n<Chromosom>   <Source>   <Feature>   <Start>   <End>   <Score>   <Strand>   <Frame>   [Attributes]   [Comments]");

        output_sgrCheckBox.setText("SGR");
        output_sgrCheckBox.setToolTipText("SGR format description");

        output_bedCheckBox.setText("BED");
        output_bedCheckBox.setToolTipText("BED format description");

        output_outputDirectoryLabel.setText("Output directory");

        output_browseButton.setText("Browse");
        output_browseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                output_browseButtonMouseReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout outputPanelLayout = new org.jdesktop.layout.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(outputPanelLayout.createSequentialGroup()
                .add(outputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(outputPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(output_outputDirectoryLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(output_outputDirectoryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(output_browseButton))
                    .add(outputPanelLayout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(outputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(output_gffCheckBox)
                            .add(output_formatLabel)
                            .add(output_sgrCheckBox)
                            .add(output_bedCheckBox)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, outputPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(output_titleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)))
                .addContainerGap())
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(outputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(output_titleLabel)
                .add(18, 18, 18)
                .add(outputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(output_outputDirectoryLabel)
                    .add(output_browseButton)
                    .add(output_outputDirectoryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(output_formatLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(output_gffCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(output_sgrCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(output_bedCheckBox)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        wizardInnerPanel.add(outputPanel, "card3");

        summaryPanel.setName("summaryPanel"); // NOI18N

        summary_title.setFont(new java.awt.Font("Tahoma", 0, 18));
        summary_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        summary_title.setText("Summary");

        summary_experimentNameLabel.setText("Experiment name");

        summary_outputDirectoryLabel.setText("Output directory");

        summary_numberOfSlidesLabel.setText("Number of slides");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, names_analysisNameTextField, org.jdesktop.beansbinding.ELProperty.create("${text}"), summary_experimentTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, output_outputDirectoryTextField, org.jdesktop.beansbinding.ELProperty.create("${text}"), summary_outputDirectoryTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        summary_numberOfSlidesTextField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, names_numberOfSlidesSpinner, org.jdesktop.beansbinding.ELProperty.create("${value}"), summary_numberOfSlidesTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.jdesktop.layout.GroupLayout summaryPanelLayout = new org.jdesktop.layout.GroupLayout(summaryPanel);
        summaryPanel.setLayout(summaryPanelLayout);
        summaryPanelLayout.setHorizontalGroup(
            summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(summaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(summaryPanelLayout.createSequentialGroup()
                        .add(summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(summary_experimentNameLabel)
                            .add(summary_numberOfSlidesLabel)
                            .add(summary_outputDirectoryLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(summary_experimentTextField)
                            .add(summary_numberOfSlidesTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(summary_outputDirectoryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, summary_title, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                .addContainerGap())
        );
        summaryPanelLayout.setVerticalGroup(
            summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(summaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(summary_title)
                .add(18, 18, 18)
                .add(summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(summary_experimentNameLabel)
                    .add(summary_experimentTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(summary_outputDirectoryLabel)
                    .add(summary_outputDirectoryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(summaryPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(summary_numberOfSlidesLabel)
                    .add(summary_numberOfSlidesTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(223, Short.MAX_VALUE))
        );

        wizardInnerPanel.add(summaryPanel, "card2");

        org.jdesktop.layout.GroupLayout wizardMainPanelLayout = new org.jdesktop.layout.GroupLayout(wizardMainPanel);
        wizardMainPanel.setLayout(wizardMainPanelLayout);
        wizardMainPanelLayout.setHorizontalGroup(
            wizardMainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(wizardMainPanelLayout.createSequentialGroup()
                .add(4, 4, 4)
                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(wizardInnerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .add(6, 6, 6))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, wizardMain_separator, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, wizardMainPanelLayout.createSequentialGroup()
                .addContainerGap(299, Short.MAX_VALUE)
                .add(wizard_backButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(wizard_nextButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(wizard_cancelButton)
                .addContainerGap())
        );
        wizardMainPanelLayout.setVerticalGroup(
            wizardMainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(wizardMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(wizardMainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(wizardInnerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(wizardMain_separator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(wizardMainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(wizard_cancelButton)
                    .add(wizard_nextButton)
                    .add(wizard_backButton))
                .add(30, 30, 30))
        );

        org.jdesktop.layout.GroupLayout wizardFrameLayout = new org.jdesktop.layout.GroupLayout(wizardFrame.getContentPane());
        wizardFrame.getContentPane().setLayout(wizardFrameLayout);
        wizardFrameLayout.setHorizontalGroup(
            wizardFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(wizardMainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        wizardFrameLayout.setVerticalGroup(
            wizardFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(wizardMainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        wizardFrame.getAccessibleContext().setAccessibleParent(this);

        slideCreationDialog.setTitle("Slide creation...");
        slideCreationDialog.setAlwaysOnTop(true);
        slideCreationDialog.setBounds(new java.awt.Rectangle(100, 100, 200, 50));
        slideCreationDialog.setResizable(false);

        org.jdesktop.layout.GroupLayout slideCreationPanelLayout = new org.jdesktop.layout.GroupLayout(slideCreationPanel);
        slideCreationPanel.setLayout(slideCreationPanelLayout);
        slideCreationPanelLayout.setHorizontalGroup(
            slideCreationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(slideCreation_progressBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
        );
        slideCreationPanelLayout.setVerticalGroup(
            slideCreationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(slideCreation_progressBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout slideCreationDialogLayout = new org.jdesktop.layout.GroupLayout(slideCreationDialog.getContentPane());
        slideCreationDialog.getContentPane().setLayout(slideCreationDialogLayout);
        slideCreationDialogLayout.setHorizontalGroup(
            slideCreationDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(slideCreationPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        slideCreationDialogLayout.setVerticalGroup(
            slideCreationDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(slideCreationPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        slideCreationDialog.getAccessibleContext().setAccessibleParent(wizardMainPanel);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField4.setText("jTextField4");

        jButton2.setText("Lancer le wizard");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton2MouseReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(251, 251, 251)
                        .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(238, 238, 238)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(205, 205, 205)
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(80, 80, 80)
                .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void wizard_nextButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wizard_nextButtonMouseReleased
    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    if(wizard_nextButton.isEnabled()){
        
        System.out.println("Next");
        if(namesPanel.isVisible() && wizardInnerPanel.getComponentCount() != 5+(Integer)names_numberOfSlidesSpinner.getValue()){
            wizard_nextButton.setEnabled(false);
            slideCreationDialog.setVisible(true);
            slideCreation_progressBar.setVisible(true);
            slideCreation_progressBar.setIndeterminate(false);
            slideCreation_progressBar.setMaximum((Integer)names_numberOfSlidesSpinner.getValue());
            slideCreation_progressBar.setMaximum(0);
            slideCreation_progressBar.setValue(0);
            
            slideCreation_progressBar.setStringPainted(true);
            slideCreationPanel.update(slideCreationPanel.getGraphics());
            SlidePanel newSlidePanel;
            for(int i=wizardInnerPanel.getComponentCount()-5;i < (Integer)names_numberOfSlidesSpinner.getValue();i++){
                System.out.println("Insertion panel n°"+(i+1));
                newSlidePanel = new SlidePanel();
                newSlidePanel.setTitle("Experiment n°"+(i+1));
                wizardInnerPanel.add(newSlidePanel, "experiment"+(i+1), wizardInnerPanel.getComponentCount()-4);
                slideCreation_progressBar.setValue(i+1);
                slideCreationPanel.update(slideCreationPanel.getGraphics());
            }
            slideCreationDialog.setVisible(false);
            wizard_nextButton.setEnabled(true);
            
        }
        cardLayout.next(wizardInnerPanel);
    } 
    if(summaryPanel.isVisible()){
        wizard_nextButton.setText("Run");
        wizard_backButton.setEnabled(true);
        
    }
    else{
        wizard_nextButton.setText("Next");
        wizard_nextButton.setEnabled(true);
        wizard_backButton.setEnabled(true);
    }
    setCursor(null);
}//GEN-LAST:event_wizard_nextButtonMouseReleased

private void wizard_backButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wizard_backButtonMouseReleased
    if(wizard_backButton.isEnabled()){
        System.out.println("Back");
        cardLayout.previous(wizardInnerPanel);
    }
    if(namesPanel.isVisible()){
        wizard_nextButton.setText("Next");
        wizard_nextButton.setEnabled(true);
        wizard_backButton.setEnabled(false);
    }
    else{
        wizard_nextButton.setText("Next");
        wizard_nextButton.setEnabled(true);
        wizard_backButton.setEnabled(true);
    }
}//GEN-LAST:event_wizard_backButtonMouseReleased

private void wizard_cancelButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wizard_cancelButtonMouseReleased
    System.out.println("Cancel");
    wizardFrame.dispose();
}//GEN-LAST:event_wizard_cancelButtonMouseReleased

private void peak_bindingCheckBoxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peak_bindingCheckBoxMouseReleased
    if(peak_bindingCheckBox.isSelected()){
        peak_bindingPeakLabel.setEnabled(true);
        peak_bindingPeakMeanLabel.setEnabled(true);
        peak_bindingPeakStddevLabel.setEnabled(true);
        peak_bindingPeakMeanTextField.setEnabled(true);
        peak_bindingPeakStddevTextField.setEnabled(true);
        peak_bindingExtendLabel.setEnabled(true);
        peak_bindingExtendMeanLabel.setEnabled(true);
        peak_bindingExtendStddevLabel.setEnabled(true);
        peak_bindingExtendMeanTextField.setEnabled(true);
        peak_bindingExtendStddevTextField.setEnabled(true);
        
    }
    else{
        peak_bindingPeakLabel.setEnabled(false);
        peak_bindingPeakMeanLabel.setEnabled(false);
        peak_bindingPeakStddevLabel.setEnabled(false);
        peak_bindingPeakMeanTextField.setEnabled(false);
        peak_bindingPeakStddevTextField.setEnabled(false);
        peak_bindingExtendLabel.setEnabled(false);
        peak_bindingExtendMeanLabel.setEnabled(false);
        peak_bindingExtendStddevLabel.setEnabled(false);
        peak_bindingExtendMeanTextField.setEnabled(false);
        peak_bindingExtendStddevTextField.setEnabled(false);
    }
}//GEN-LAST:event_peak_bindingCheckBoxMouseReleased

private void peak_pValueCheckBoxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peak_pValueCheckBoxMouseReleased
    if(peak_pValueCheckBox.isSelected()){
        peak_pValuePeakLabel.setEnabled(true);
        peak_pValuePeakTextField.setEnabled(true);
        peak_pValueExtendLabel.setEnabled(true);
        peak_pValueExtendTextField.setEnabled(true);
    }
    else{
        peak_pValuePeakLabel.setEnabled(false);
        peak_pValuePeakTextField.setEnabled(false);
        peak_pValueExtendLabel.setEnabled(false);
        peak_pValueExtendTextField.setEnabled(false);
    }
}//GEN-LAST:event_peak_pValueCheckBoxMouseReleased

private void output_browseButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_output_browseButtonMouseReleased
    int returnVal = directoryChooser.showOpenDialog(wizardInnerPanel);
    if(returnVal == JFileChooser.APPROVE_OPTION) {
       File outputDirectory = directoryChooser.getSelectedFile();
       output_outputDirectoryTextField.setText(outputDirectory.getAbsolutePath());
    }
}//GEN-LAST:event_output_browseButtonMouseReleased

private void normalisation_medianRadioButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_normalisation_medianRadioButtonMouseReleased
    if(normalisation_medianRadioButton.isSelected()){
        normalisation_explainTextArea.setText("The median normalisation simply corrects the data such that all arrays have the same median.");
    }
}//GEN-LAST:event_normalisation_medianRadioButtonMouseReleased

private void normalisation_lowessRadioButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_normalisation_lowessRadioButtonMouseReleased
    if(normalisation_lowessRadioButton.isSelected()){
        normalisation_explainTextArea.setText("The Lowess normalisation procedure subtracts a Lowess regression curve from the data to linearise it.");
    }
}//GEN-LAST:event_normalisation_lowessRadioButtonMouseReleased

private void normalisation_vsnRadioButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_normalisation_vsnRadioButtonMouseReleased
    if(normalisation_vsnRadioButton.isSelected()){
        normalisation_explainTextArea.setText("The Variance Stabilisation Normalisation (V.S.N.)" +
                " method builds upon the fact that the variance of microarray data depends on the" +
                " signal intensity and that a transformation can be found after which the variance" +
                " is approximately constant.");
    }
}//GEN-LAST:event_normalisation_vsnRadioButtonMouseReleased

private void normalisation_pengRadioButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_normalisation_pengRadioButtonMouseReleased
    if(normalisation_pengRadioButton.isSelected()){
        normalisation_explainTextArea.setText("Mr Peng's normalisation");
    }
}//GEN-LAST:event_normalisation_pengRadioButtonMouseReleased

private void jButton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseReleased
    Wizard wizard = new Wizard(this,true);
    wizard.setVisible(true);
}//GEN-LAST:event_jButton2MouseReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser directoryChooser;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JPanel namesPanel;
    private javax.swing.JLabel names_TitleLabel;
    private javax.swing.JLabel names_analysisNameLabel;
    private javax.swing.JTextField names_analysisNameTextField;
    private javax.swing.JLabel names_numberOfSlidesLabel;
    private javax.swing.JSpinner names_numberOfSlidesSpinner;
    private javax.swing.JPanel normalisationPanel;
    private javax.swing.ButtonGroup normalisation_buttonGroup;
    private javax.swing.JScrollPane normalisation_explainScrollPane;
    private javax.swing.JTextArea normalisation_explainTextArea;
    private javax.swing.JRadioButton normalisation_lowessRadioButton;
    private javax.swing.JRadioButton normalisation_medianRadioButton;
    private javax.swing.JRadioButton normalisation_pengRadioButton;
    private javax.swing.JSeparator normalisation_separator;
    private javax.swing.JLabel normalisation_titleLabel;
    private javax.swing.JRadioButton normalisation_vsnRadioButton;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JCheckBox output_bedCheckBox;
    private javax.swing.JButton output_browseButton;
    private javax.swing.JLabel output_formatLabel;
    private javax.swing.JCheckBox output_gffCheckBox;
    private javax.swing.JLabel output_outputDirectoryLabel;
    private javax.swing.JTextField output_outputDirectoryTextField;
    private javax.swing.JCheckBox output_sgrCheckBox;
    private javax.swing.JLabel output_titleLabel;
    private javax.swing.JPanel peakPanel;
    private javax.swing.JCheckBox peak_bindingCheckBox;
    private javax.swing.JLabel peak_bindingExtendLabel;
    private javax.swing.JLabel peak_bindingExtendMeanLabel;
    private javax.swing.JTextField peak_bindingExtendMeanTextField;
    private javax.swing.JLabel peak_bindingExtendStddevLabel;
    private javax.swing.JTextField peak_bindingExtendStddevTextField;
    private javax.swing.JLabel peak_bindingPeakLabel;
    private javax.swing.JLabel peak_bindingPeakMeanLabel;
    private javax.swing.JTextField peak_bindingPeakMeanTextField;
    private javax.swing.JLabel peak_bindingPeakStddevLabel;
    private javax.swing.JTextField peak_bindingPeakStddevTextField;
    private javax.swing.JLabel peak_distanceLabel;
    private javax.swing.JTextField peak_distanceTextField;
    private javax.swing.JCheckBox peak_pValueCheckBox;
    private javax.swing.JLabel peak_pValueExtendLabel;
    private javax.swing.JTextField peak_pValueExtendTextField;
    private javax.swing.JLabel peak_pValuePeakLabel;
    private javax.swing.JTextField peak_pValuePeakTextField;
    private javax.swing.JLabel peak_titleLabel;
    private javax.swing.JDialog slideCreationDialog;
    private javax.swing.JPanel slideCreationPanel;
    private javax.swing.JProgressBar slideCreation_progressBar;
    private javax.swing.JPanel summaryPanel;
    private javax.swing.JLabel summary_experimentNameLabel;
    private javax.swing.JTextField summary_experimentTextField;
    private javax.swing.JLabel summary_numberOfSlidesLabel;
    private javax.swing.JTextField summary_numberOfSlidesTextField;
    private javax.swing.JLabel summary_outputDirectoryLabel;
    private javax.swing.JTextField summary_outputDirectoryTextField;
    private javax.swing.JLabel summary_title;
    private javax.swing.JDialog wizardFrame;
    private javax.swing.JPanel wizardInnerPanel;
    private javax.swing.JPanel wizardMainPanel;
    private javax.swing.JSeparator wizardMain_separator;
    private javax.swing.JButton wizard_backButton;
    private javax.swing.JButton wizard_cancelButton;
    private javax.swing.JButton wizard_nextButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    
}
