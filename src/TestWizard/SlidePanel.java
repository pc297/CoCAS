/*
 * SlidePanel.java
 *
 * Created on 12 juin 2008, 17:25
 */

package TestWizard;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  jeanniard
 */
public class SlidePanel extends javax.swing.JPanel {
    public int numberOfFiles = 0;
    /** Creates new form SlidePanel */
    public SlidePanel() {
        initComponents();
        fileChooser.setMultiSelectionEnabled(true);
        //fileTable.setAutoCreateRowSorter(true);
        fileTable.getColumnModel().getColumn(1).setPreferredWidth(65);
        fileTable.getColumnModel().getColumn(1).setMaxWidth(65);
        fileTable.getColumnModel().getColumn(1).setMinWidth(65);
    }
    
    public void setTitle(String s){
        titleLabel.setText(s);
    }
    public String getTitle(){
        return titleLabel.getText();
    }
    public void addFile(File newFile){
        addFile(newFile,false);
    }
    public void addFile(File newFile, boolean isSwap){
        DefaultTableModel tableModel = (DefaultTableModel)fileTable.getModel();
        Object[] newRow = {newFile.getAbsolutePath(), isSwap};
        tableModel.addRow(newRow);
        numberOfFiles++;
    }
    public File getFile(int i){
        DefaultTableModel tableModel = (DefaultTableModel)fileTable.getModel();
        return new File((String)tableModel.getValueAt(i, 0));
    }
    public boolean getSwap(int i){
        DefaultTableModel tableModel = (DefaultTableModel)fileTable.getModel();
        return (Boolean)tableModel.getValueAt(i, 1);
    }
    public void setSwap(boolean isSwap, int i){
        DefaultTableModel tableModel = (DefaultTableModel)fileTable.getModel();
        tableModel.setValueAt(isSwap, i, 1);
    }
    public void removeFile(int i){
        DefaultTableModel tableModel = (DefaultTableModel)fileTable.getModel();
        tableModel.removeRow(i);
        numberOfFiles--;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        titleLabel = new javax.swing.JLabel();
        fileTableScrollPanel = new javax.swing.JScrollPane();
        fileTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        renameButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(350, 350));
        setMinimumSize(new java.awt.Dimension(350, 350));

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("New experiment");

        fileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "Dye swap?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fileTable.setColumnSelectionAllowed(true);
        fileTable.setShowVerticalLines(false);
        fileTable.getTableHeader().setResizingAllowed(false);
        fileTable.getTableHeader().setReorderingAllowed(false);
        fileTableScrollPanel.setViewportView(fileTable);

        addButton.setText("Add");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addButtonMouseReleased(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeButtonMouseReleased(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                clearButtonMouseReleased(evt);
            }
        });

        renameButton.setFont(new java.awt.Font("Tahoma", 0, 10));
        renameButton.setText("Rename");
        renameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                renameButtonMouseReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, fileTableScrollPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(addButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 167, Short.MAX_VALUE)
                        .add(clearButton))
                    .add(layout.createSequentialGroup()
                        .add(titleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(renameButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(renameButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(titleLabel))
                .add(18, 18, 18)
                .add(fileTableScrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 241, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(clearButton)
                    .add(addButton)
                    .add(removeButton))
                .add(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

private void addButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseReleased
    File[] inputFiles;
    fileChooser.setFileFilter(new cocas.TextFilter());
    if(fileChooser.showOpenDialog(addButton.getParent()) == JFileChooser.APPROVE_OPTION) {
        inputFiles = fileChooser.getSelectedFiles();
        for(File f : inputFiles){
            if(!f.exists()){
                JOptionPane.showMessageDialog(addButton.getParent(), "Specified file\n'"+f.getPath()+"'\nnot found !", "File not found !", JOptionPane.ERROR_MESSAGE);
            }
            addFile(f);
        }
    }
}//GEN-LAST:event_addButtonMouseReleased

private void removeButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeButtonMouseReleased
    int[] selection = fileTable.getSelectedRows();
    for(int i=selection.length-1;i>=0;i--){
        removeFile(selection[i]);
    }
}//GEN-LAST:event_removeButtonMouseReleased

private void clearButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseReleased
    DefaultTableModel model = (DefaultTableModel)fileTable.getModel();
    model.setRowCount(0);
}//GEN-LAST:event_clearButtonMouseReleased

private void renameButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_renameButtonMouseReleased
    String newTitle = JOptionPane.showInputDialog(this.getParent(),"New slide name:");
    if(newTitle != null && !(newTitle.length()==0)) titleLabel.setText(newTitle);
}//GEN-LAST:event_renameButtonMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTable fileTable;
    private javax.swing.JScrollPane fileTableScrollPanel;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton renameButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
